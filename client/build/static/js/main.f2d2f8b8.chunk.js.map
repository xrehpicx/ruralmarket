{"version":3,"sources":["GlobalContext.jsx","assets/logo.svg","components/api.js","components/Home.jsx","components/SignLog.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["GlobalContext","createContext","GlobalContextProvider","children","useState","user","setUser","useEffect","console","log","localStorage","setItem","JSON","stringify","window","location","href","origin","utemp","getItem","parse","Provider","value","endpoint","auth","a","axios","post","data","signup","Products","products","setProducts","Promise","res","rej","setTimeout","then","className","map","p","i","Product","product","Typography","variant","name","cost","getSymbolFromCurrency","currency","amount","src","images","alt","Home","history","useHistory","useContext","color","Button","onClick","push","Fab","style","marginLeft","Login","form","useRef","TextField","label","defaultValue","margin","onChange","e","current","username","target","type","password","Number","length","login","number","Signup","errm","setErr","verify","trim","password2","theme","createMuiTheme","palette","primary","main","App","ThemeProvider","exact","path","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f2d2f8b8.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const GlobalContext = createContext();\n\nexport function GlobalContextProvider({ children }) {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    if (user) {\n      console.log(user);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      if (window.location.href !== window.location.origin + \"/\") {\n        window.location.href = window.location.origin;\n      }\n    }\n  }, [user]);\n\n  useEffect(() => {\n    const utemp = localStorage.getItem(\"user\");\n    if (utemp) setUser(JSON.parse(utemp));\n  }, []);\n  return (\n    <GlobalContext.Provider value={{ user, setUser }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.c6bd3634.svg\";","import axios from 'axios'\nimport products from './products.json'\n\nconst endpoint = window.location.origin + '/api'\n\nexport function getProducts() {\n    return new Promise((res, rej) => {\n        setTimeout(() => {\n            res(products)\n        }, 200)\n    })\n}\nexport async function login(auth) {\n    return (await axios.post(endpoint + '/login', auth)).data\n}\n\nexport async function signup(auth) {\n    return (await axios.post(endpoint + '/signup', auth)).data\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useHistory,\n  useParams,\n} from \"react-router-dom\";\n\n// external components\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\n\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\n// styles\nimport logo from \"../assets/logo.svg\";\nimport \"./css/home.css\";\n// context\nimport { GlobalContext } from \"../GlobalContext\";\n// util\nimport { getProducts } from \"./api\";\nimport getSymbolFromCurrency from \"currency-symbol-map\";\n\nfunction Home() {\n  const history = useHistory();\n  const { user } = useContext(GlobalContext);\n  return (\n    <>\n      <div className=\"home\">\n        <header>\n          <div className=\"left\">\n            <Typography color=\"primary\" variant=\"h4\">\n              Kisaan\n            </Typography>\n          </div>\n          <div className=\"right\">\n            {!user ? (\n              <>\n                <Button onClick={() => history.push(\"/login\")} color=\"primary\">\n                  Log in\n                </Button>\n                <Button\n                  onClick={() => history.push(\"/signup\")}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                >\n                  Sign up\n                </Button>\n              </>\n            ) : (\n              <></>\n            )}\n          </div>\n        </header>\n        <Products />\n      </div>\n      <div className=\"quick-actions\">\n        <Fab\n          onClick={\n            user\n              ? () => console.log(\"going to cart\")\n              : () => history.push(\"/signup\")\n          }\n          variant=\"extended\"\n          color=\"primary\"\n          style={{ color: \"white\" }}\n        >\n          <ShoppingCartIcon />\n          <span style={{ marginLeft: \"8px\" }}>Cart</span>\n        </Fab>\n        <Fab\n          onClick={\n            user\n              ? () => console.log(\"going to sell\")\n              : () => history.push(\"/login\")\n          }\n          variant=\"extended\"\n          color=\"primary\"\n          style={{ color: \"white\" }}\n        >\n          <AddShoppingCartIcon />\n          <span style={{ marginLeft: \"8px\" }}>sell</span>\n        </Fab>\n      </div>\n    </>\n  );\n}\n\nfunction Products() {\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    getProducts().then(setProducts);\n  }, []);\n  return (\n    <div className=\"products\">\n      {products.map((p, i) => (\n        <Product key={i} product={p} />\n      ))}\n    </div>\n  );\n}\n\nfunction Product({ product }) {\n  console.log(product);\n\n  return (\n    <div className=\"product\">\n      <div className=\"details\">\n        <Typography className=\"product-display-title\" variant=\"h4\">\n          {product.name}\n        </Typography>\n        <div className=\"about\">\n          <Typography variant=\"h6\">\n            {product.cost.value +\n              \" \" +\n              getSymbolFromCurrency(product.cost.currency) +\n              \"/kg\"}\n          </Typography>\n          <Typography variant=\"subtitle2\">\n            available amount: {product.amount} kg\n          </Typography>\n        </div>\n      </div>\n      <div className=\"main-product-image\">\n        <img src={product.images[0]} alt=\"\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useHistory,\n  useParams,\n} from \"react-router-dom\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n//context\nimport { GlobalContext } from \"../GlobalContext\";\n// util\nimport { login, signup } from \"./api\";\n\nimport \"./css/Form.css\";\nexport function Login() {\n  const form = useRef({});\n\n  const { setUser } = useContext(GlobalContext);\n  return (\n    <div className=\"login\">\n      <Typography variant=\"h2\" color=\"primary\">\n        Kissaan\n      </Typography>\n      <Typography variant=\"subtitle1\">Log in</Typography>\n      <div className=\"form\">\n        <TextField\n          label=\"number\"\n          defaultValue=\"\"\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={(e) => {\n            form.current.username = e.target.value;\n          }}\n        />\n        <TextField\n          label=\"password\"\n          type=\"password\"\n          defaultValue=\"\"\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={(e) => {\n            form.current.password = e.target.value;\n          }}\n        />\n      </div>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          if (\n            Number(form.current.username) &&\n            form.current.username.length === 10\n          ) {\n            login({\n              number: form.current.username,\n              password: form.current.password,\n            }).then(setUser);\n          }\n        }}\n      >\n        Log in\n      </Button>\n    </div>\n  );\n}\nexport function Signup() {\n  const { setUser } = useContext(GlobalContext);\n  const form = useRef({});\n  const [errm, setErr] = useState(\"\");\n  const verify = async () => {\n    if (!form.current.username) {\n      setErr(\"Enter Name\");\n      return;\n    } else if (form.current.username && !form.current.username.trim()) {\n      setErr(\"Name invalid\");\n      return;\n    } else if (!form.current.number) {\n      setErr(\"Enter your phone number\");\n      return;\n    } else if (\n      form.current.number &&\n      (!Number(form.current.number) || form.current.number.length > 10)\n    ) {\n      setErr(\"Enter a valid phone number\");\n      return;\n    } else if (form.current.password !== form.current.password2) {\n      setErr(\"passwords dont match\");\n      return;\n    }\n    setUser(await signup(form.current));\n  };\n\n  return (\n    <div className=\"signup\">\n      <Typography variant=\"h2\" color=\"primary\">\n        Kissaan\n      </Typography>\n      <Typography variant=\"subtitle1\">Sign up</Typography>\n      {errm ? (\n        <Typography style={{ color: \"red\" }} variant=\"subtitle1\">\n          {errm}\n        </Typography>\n      ) : (\n        <></>\n      )}\n\n      <div className=\"form\">\n        <div className=\"sub-form\">\n          <TextField\n            label=\"Mobile no.\"\n            defaultValue=\"\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            onChange={(e) => {\n              form.current.number = e.target.value;\n            }}\n          />\n          <TextField\n            label=\"Full name\"\n            defaultValue=\"\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            onChange={(e) => {\n              form.current.username = e.target.value;\n            }}\n          />\n        </div>\n        <div className=\"sub-form\">\n          <TextField\n            label=\"password\"\n            type=\"password\"\n            defaultValue=\"\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            onChange={(e) => {\n              form.current.password = e.target.value;\n            }}\n          />\n          <TextField\n            label=\"retype password\"\n            type=\"password\"\n            defaultValue=\"\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            onChange={(e) => {\n              form.current.password2 = e.target.value;\n            }}\n          />\n        </div>\n      </div>\n      <Button variant=\"outlined\" onClick={verify}>\n        Sign up\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\";\n\nimport \"./components/css/App.css\";\n\n// components\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\n// routes\nimport Home from \"./components/Home\";\nimport { Login, Signup } from \"./components/SignLog\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#33c971\",\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalContextProvider } from './GlobalContext'\n\nReactDOM.render(\n  <GlobalContextProvider>\n    <App />\n  </GlobalContextProvider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}